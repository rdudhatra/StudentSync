@model IEnumerable<StudentSync.Data.Models.StudentInstallment>

@{
    ViewData["Title"] = "Student Installment Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <button type="button" class="btn btn-primary mb-3" onclick="onAddStudentInstallmentClick()">Add Student Installment</button>
                <table id="StudentInstallmentTable" class="table table-bordered dt-responsive nowrap" style="width: 100%;">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Receipt No</th>
                            <th>Receipt Date</th>
                            <th>Amount</th>
                            <th>Enrollment No</th>
                            <th>Transaction Mode</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Student Installment Modal -->
<div class="modal fade" id="addEditStudentInstallmentModal" tabindex="-1" aria-labelledby="addEditStudentInstallmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEditStudentInstallmentModalLabel">Add/Edit Student Installment</h5>
                <button type="button" class="close" onclick="closeModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="StudentInstallmentForm">
                    <input type="hidden" id="Id" />
                    <div class="form-group">
                        <label for="ReceiptNo">Receipt No</label>
                        <input type="text" class="form-control" id="ReceiptNo" />
                    </div>
                    <div class="form-group">
                        <label for="ReceiptDate">Receipt Date</label>
                        <input type="date" class="form-control" id="ReceiptDate" />
                    </div>
                    <div class="form-group">
                        <label for="Amount">Amount</label>
                        <input type="number" class="form-control" id="Amount" />
                    </div>
                    <div class="form-group">
                        <label for="EnrollmentNo">Enrollment No</label>
                        <input type="text" class="form-control" id="EnrollmentNo" />
                    </div>
                    <div class="form-group">
                        <label for="TransactionMode">Transaction Mode</label>
                        <input type="text" class="form-control" id="TransactionMode" />
                    </div>
                    <button type="button" class="btn btn-primary" onclick="saveStudentInstallment()">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="close" onclick="closeModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this student installment?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal()" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteStudentInstallment()">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />


    <script>
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-bottom-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        $(document).ready(function () {
            loadDataTable();
        });

        function loadDataTable() {
            $('#StudentInstallmentTable').DataTable({
                "ajax": {
                    "url": "/StudentInstallment/GetAll",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "id" },
                    { "data": "receiptNo" },
                    {
                        "data": "receiptDate",
                        "render": function (data) {
                            return data ? new Date(data).toLocaleDateString() : '';
                        }
                    },
                    { "data": "amount" },
                    { "data": "enrollmentNo" },
                    { "data": "transactionMode" },
                    {
                        "data": "id",
                        "render": function (data) {
                            return `<button class="btn btn-primary" onclick="editStudentInstallment(${data})">Edit</button>
                                                    <button class="btn btn-danger" onclick="showDeleteConfirmationModal(${data})">Delete</button>`;
                        }
                    }
                ],
                "language": {
                    "emptyTable": "No records found"
                },
                "width": "100%"
            });
        }

        function onAddStudentInstallmentClick() {
            $('#Id').val('');
            $('#ReceiptNo').val('');
            $('#ReceiptDate').val('');
            $('#Amount').val('');
            $('#EnrollmentNo').val('');
            $('#TransactionMode').val('');
            $('#addEditStudentInstallmentModal').modal('show');
        }

        function closeModal() {
            $('#addEditStudentInstallmentModal').modal('hide');
            $('#deleteConfirmationModal').modal('hide');
        }

        function saveStudentInstallment() {
            var studentInstallment = {
                Id: $('#Id').val() ? parseInt($('#Id').val()) : 0,
                ReceiptNo: $('#ReceiptNo').val(),
                ReceiptDate: $('#ReceiptDate').val(),
                Amount: parseFloat($('#Amount').val()),
                EnrollmentNo: $('#EnrollmentNo').val(),
                TransactionMode: $('#TransactionMode').val(),
                CreatedBy: 'Admin', // Replace with actual user
                CreatedDate: new Date(),
                UpdatedBy: 'Admin', // Replace with actual user
                UpdatedDate: new Date()
            };

            var url = studentInstallment.Id ? '/StudentInstallment/Update' : '/StudentInstallment/Create';

            $.ajax({
                url: url,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(studentInstallment),
                success: function (response) {
                    var message = studentInstallment.Id ? 'Student installment updated successfully.' : 'Student installment added successfully.';
                    toastr.success(message);
                    $('#StudentInstallmentTable').DataTable().ajax.reload();
                    closeModal();
                },
                error: function () {
                    var errorMessage = studentInstallment.Id ? 'Error updating student installment.' : 'Error adding student installment.';
                    toastr.error(errorMessage);
                }
            });
        }

        function editStudentInstallment(id) {
            $.ajax({
                url: `/StudentInstallment/Edit/${id}`,
                type: 'GET',
                success: function (response) {
                    $('#Id').val(response.id);
                    $('#ReceiptNo').val(response.receiptNo);
                    $('#ReceiptDate').val(response.receiptDate ? new Date(response.receiptDate).toISOString().split('T')[0] : '');
                    $('#Amount').val(response.amount);
                    $('#EnrollmentNo').val(response.enrollmentNo);
                    $('#TransactionMode').val(response.transactionMode);
                    $('#addEditStudentInstallmentModal').modal('show');
                },
                error: function () {
                    toastr.error('Error retrieving student installment.');
                }
            });
        }

        function showDeleteConfirmationModal(id) {
            $('#Id').val(id);
            $('#deleteConfirmationModal').modal('show');
        }

        function confirmDeleteStudentInstallment() {
            var id = $('#Id').val();
            $.ajax({
                url: `/StudentInstallment/Delete/${id}`,
                type: 'POST',
                success: function () {
                    toastr.success('Student installment deleted successfully.');
                    $('#StudentInstallmentTable').DataTable().ajax.reload();
                    closeModal();
                },
                error: function () {
                    toastr.error('Error deleting student installment.');
                }
            });
        }
    </script>
}
