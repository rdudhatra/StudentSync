@* @model IEnumerable<StudentSync.Data.Models.CourseExam>

@{
    ViewBag.Title = "Course Exams";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <button type="button" class="btn btn-primary mb-3" onclick="onAddCourseExamClick()">Add Course Exam</button>
                <table id="CourseExamTable" class="table table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Course ID</th>
                            <th>Exam Title</th>
                            <th>Exam Type</th>
                            <th>Total Marks</th>
                            <th>Passing Marks</th>
                            <th>Remarks</th>
                            <th>Action</th>
                        </tr>
                    </thead id="courseExamTableBody">
                    <tbody>
                      
                    </tbody>
                </table>

                <!-- Add/Edit Course Exam Modal -->
                <div class="modal fade" id="addEditCourseExamModal" tabindex="-1" role="dialog" aria-labelledby="addEditCourseExamModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addEditCourseExamModalLabel">Add/Edit Course Exam</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form id="CourseExamForm">
                                    <input type="hidden" id="Id" name="Id" />
                                    <div class="form-group">
                                        <label for="CourseId">Course ID:</label>
                                        <input type="number" class="form-control" id="CourseId" placeholder="Enter course ID" required>
                                    </div>
                                    <div class="form-group">
                                        <label for="ExamTitle">Exam Title:</label>
                                        <input type="text" class="form-control" id="ExamTitle" placeholder="Enter exam title" required>
                                    </div>
                                    <div class="form-group">
                                        <label for="ExamType">Exam Type:</label>
                                        <input type="text" class="form-control" id="ExamType" placeholder="Enter exam type">
                                    </div>
                                    <div class="form-group">
                                        <label for="TotalMarks">Total Marks:</label>
                                        <input type="number" class="form-control" id="TotalMarks" placeholder="Enter total marks">
                                    </div>
                                    <div class="form-group">
                                        <label for="PassingMarks">Passing Marks:</label>
                                        <input type="number" class="form-control" id="PassingMarks" placeholder="Enter passing marks">
                                    </div>
                                    <div class="form-group">
                                        <label for="Remarks">Remarks:</label>
                                        <input type="text" class="form-control" id="Remarks" placeholder="Enter remarks">
                                    </div>
                                    <!-- Hidden fields for CreatedBy and UpdatedBy -->
                                    <input type="hidden" id="CreatedBy" name="CreatedBy" value="defaultUser" />
                                    <input type="hidden" id="UpdatedBy" name="UpdatedBy" value="defaultUser" />
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" onclick="saveCourseExam()">Save</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Delete Confirmation Modal -->
                <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to delete this Course Exam?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" onclick="deleteCourseExam()">Delete</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <!-- jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>
    <script>
        // Function to save CourseExam data via AJAX
        function saveCourseExam() {
            var formData = {
                Id: $('#Id').val() ? parseInt($('#Id').val()) : 0,
                CourseId: $('#CourseId').val(),
                ExamTitle: $('#ExamTitle').val(),
                ExamType: $('#ExamType').val(),
                TotalMarks: $('#TotalMarks').val(),
                PassingMarks: $('#PassingMarks').val(),
                Remarks: $('#Remarks').val(),
                CreatedBy: $('#CreatedBy').val(),
                UpdatedBy: $('#UpdatedBy').val()
            };

            var url = (formData.Id === 0 || formData.Id === "") ? "/CourseExam/Create" : "/CourseExam/Edit";

            $.ajax({
                url: url,
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(formData),
                success: function (response) {
                    $('#addEditCourseExamModal').modal('hide');
                    if (formData.Id === 0 || formData.Id === "") {
                        toastr.success('Course exam added successfully.');
                    } else {
                        toastr.success('Course exam updated successfully.');
                    }
                    dataTable.ajax.reload();
                },
                error: function (response) {
                    toastr.error('Error saving course exam.');
                }
            });
        }

        // Function to delete CourseExam via AJAX
        function onDeleteCourseExamClick(id) {
            $('#Id').val(id);
            $('#deleteConfirmationModal').modal('show');

            $('#deleteConfirmationModal').on('click', '.btn-danger', function () {
                $.ajax({
                    url: "/CourseExam/DeleteConfirmed/" + id,
                    type: "POST",
                    success: function (response) {
                        $('#deleteConfirmationModal').modal('hide');
                        toastr.success('Course exam deleted successfully.');
                        dataTable.ajax.reload();
                    },
                    error: function (response) {
                        toastr.error('Error deleting course exam.');
                    }
                });
            });
        }

        // Function to populate data in the modal for editing
        function onEditCourseExamClick(id) {
            $.ajax({
                url: "/CourseExam/Edit/" + id,
                type: "GET",
                success: function (data) {
                    $('#Id').val(data.id);
                    $('#CourseId').val(data.courseId);
                    $('#ExamTitle').val(data.examTitle);
                    $('#ExamType').val(data.examType);
                    $('#TotalMarks').val(data.totalMarks);
                    $('#PassingMarks').val(data.passingMarks);
                    $('#Remarks').val(data.remarks);

                    $('#addEditCourseExamModal').modal('show');
                    $('#addEditCourseModalLabel').text('Edit CourseExam');

                },
                error: function (response) {
                    toastr.error('Error fetching course exam data.');
                }
            });
        }

        // Function to open modal for adding a new CourseExam
        function onAddCourseExamClick() {
            $('#Id').val("");
            $('#CourseId').val("");
            $('#ExamTitle').val("");
            $('#ExamType').val("");
            $('#TotalMarks').val("");
            $('#PassingMarks').val("");
            $('#Remarks').val("");

            $('#addEditCourseExamModal').modal('show');
        }

        // DataTable initialization
        var dataTable = $('#CourseExamTable').DataTable({
            "processing": true,
            "serverSide": true,
            "filter": true,
            "orderMulti": false,
            "ajax": {
                "url": "/CourseExam/GetAll",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "id", "name": "Id", "autoWidth": true },
                { "data": "courseId", "name": "CourseId", "autoWidth": true },
                { "data": "examTitle", "name": "ExamTitle", "autoWidth": true },
                { "data": "examType", "name": "ExamType", "autoWidth": true },
                { "data": "totalMarks", "name": "TotalMarks", "autoWidth": true },
                { "data": "passingMarks", "name": "PassingMarks", "autoWidth": true },
                { "data": "remarks", "name": "Remarks", "autoWidth": true },
                {
                    "data": "id", "render": function (data) {
                        return '<div class="text-center">' +
                            '<a href="#" onclick="onEditCourseExamClick(' + data + ')" class="btn btn-primary btn-sm">Edit</a> ' +
                            '<a href="#" onclick="onDeleteCourseExamClick(' + data + ')" class="btn btn-danger btn-sm">Delete</a>' +
                            '</div>';
                    }, "width": "15%"
                }
            ]
        });
    </script>
}
 *@



@model IEnumerable<StudentSync.Data.Models.CourseExam>

@{
    ViewBag.Title = "Course Exams";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <button type="button" class="btn btn-primary mb-3" onclick="onAddCourseExamClick()">+</button>
                <table id="CourseExamTable" class="table table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Course ID</th>
                            <th>Exam Title</th>
                            <th>Exam Type</th>
                            <th>Total Marks</th>
                            <th>Passing Marks</th>
                            <th>Remarks</th>
                            <th>Action</th>
                        </tr>
                    </thead id="courseExamTableBody">
                    <tbody>

                    </tbody>
                </table>

                <!-- Add/Edit Course Exam Modal -->
                <div class="modal fade" id="addEditCourseExamModal" tabindex="-1" role="dialog" aria-labelledby="addEditCourseExamModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addEditCourseExamModalLabel">Add/Edit Course Exam</h5>
                                <button type="button" class="close" data-dismiss="modal"   onclick="closeModal()">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form id="CourseExamForm">
                                    <input type="hidden" id="Id" name="Id" />
                                @*     <div class="form-group">
                                        <label for="CourseId">Course ID:</label>
                                        <input type="number" class="form-control" id="CourseId" placeholder="Enter course ID" required>
                                        <div class="invalid-feedback">Please enter a Course ID.</div>
                                    </div> *@
                                    <div class="form-group">
                                        <label for="CourseId">Course ID:</label>
                                        <select class="form-control" id="CourseId" required>
                                            <option value="">Select Course ID</option>
                                            <!-- Options will be dynamically populated here -->
                                        </select>
                                        <div class="invalid-feedback">Please enter a Course ID.</div>
                                    </div>


                                    <div class="form-group">
                                        <label for="ExamTitle">Exam Title:</label>
                                        <input type="text" class="form-control" id="ExamTitle" placeholder="Enter exam title" required>
                                        <div class="invalid-feedback">Please enter an Exam Title.</div>

                                    </div>
                                    <div class="form-group">
                                        <label for="ExamType">Exam Type:</label>
                                        <input type="text" class="form-control" id="ExamType" placeholder="Enter exam type">
                                    </div>
                                    <div class="form-group">
                                        <label for="TotalMarks">Total Marks:</label>
                                        <input type="number" class="form-control" id="TotalMarks" placeholder="Enter total marks">
                                          <div class="invalid-feedback">Please enter a valid number for Total Marks.</div>

                                    </div>
                                    <div class="form-group">
                                        <label for="PassingMarks">Passing Marks:</label>
                                        <input type="number" class="form-control" id="PassingMarks" placeholder="Enter passing marks">
                                         <div class="invalid-feedback">Please enter a valid number for Passing Marks.</div>

                                    </div>
                                    <div class="form-group">
                                        <label for="Remarks">Remarks:</label>
                                        <input type="text" class="form-control" id="Remarks" placeholder="Enter remarks">
                                        <div class="invalid-feedback">Please enter remarks.</div>

                                    </div>
                                    <!-- Hidden fields for CreatedBy and UpdatedBy -->
                                    <input type="hidden" id="CreatedBy" name="CreatedBy" value="defaultUser" />
                                    <input type="hidden" id="UpdatedBy" name="UpdatedBy" value="defaultUser" />
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" onclick="saveCourseExam()">Save</button>
@*                                 <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
 *@                            </div>
                        </div>
                    </div>
                </div>

                <!-- Delete Confirmation Modal -->
                <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                                <button type="button" class="close" data-dismiss="modal" onclick="closeModal()">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to delete this Course Exam?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" onclick="deleteCourseExam()">Delete</button>
                                <button type="button" class="btn btn-secondary"   onclick="closeModal()" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <!-- jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>
    <script>
        // Function to display validation message
            function displayValidationMessage(message, inputElement) {
                var parentDiv = inputElement.closest('.form-group');
                parentDiv.addClass('has-error');
                parentDiv.find('.invalid-feedback').text(message).show();
            }

            // Function to clear validation messages
            function clearValidationMessages() {
                $('.form-group').removeClass('has-error');
                $('.invalid-feedback').hide().text('');
            }
            // Function to validate numeric input
function validateNumberInput(value) {
    return !isNaN(value) && value.trim() !== '';
}
        // Function to save CourseExam data via AJAX
        function saveCourseExam() {

                clearValidationMessages(); // Clear validation messages before saving
                var isValid = true;

            // Validate Course ID
            if ($('#CourseId').val().trim() === '') {
                displayValidationMessage('Course ID is required.', $('#CourseId'));
                isValid = false;
            }

            // Validate Exam Title
            if ($('#ExamTitle').val().trim() === '') {
                displayValidationMessage('Exam Title is required.', $('#ExamTitle'));
                isValid = false;
            }

            // Validate Total Marks (if provided)
            if ($('#TotalMarks').val().trim() === '') {
                displayValidationMessage('TotalMarks are required.', $('#TotalMarks'));
                isValid = false;
            }

            // Validate Passing Marks (if provided)
            if ($('#PassingMarks').val().trim() === '') {
                displayValidationMessage('PassingMarks are required.', $('#PassingMarks'));
                isValid = false;
            }

            // Validate Remarks
            if ($('#Remarks').val().trim() === '') {
                displayValidationMessage('Remarks are required.', $('#Remarks'));
                isValid = false;
            }

            if (!isValid) {
                return;
            }
            var formData = {
                Id: $('#Id').val() ? parseInt($('#Id').val()) : 0,
                CourseId: $('#CourseId').val(),
                ExamTitle: $('#ExamTitle').val(),
                ExamType: $('#ExamType').val(),
                TotalMarks: $('#TotalMarks').val(),
                PassingMarks: $('#PassingMarks').val(),
                Remarks: $('#Remarks').val(),
                CreatedBy: $('#CreatedBy').val(),
                UpdatedBy: $('#UpdatedBy').val()
            };

            var url = (formData.Id == 0 || formData.Id == "") ? "/CourseExam/Create" : "/CourseExam/UpdateCourseExam";



            $.ajax({
                url: url,
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(formData),
                success: function (response) {
                    $('#addEditCourseExamModal').modal('hide');
                    if (formData.Id === 0 || formData.Id === "") {
                        toastr.success('Course exam added successfully.');
                    } else {
                        toastr.success('Course exam updated successfully.');
                    }
                    dataTable.ajax.reload();
                },
                error: function (response) {
                    toastr.error('Error saving course exam.');
                }
            }); 
        }
         function closeModal() {
             $('#addEditCourseExamModal').modal('hide'); // Hide the modal using jQuery
             $('#deleteConfirmationModal').modal('hide');
         }
        // Function to delete CourseExam via AJAX
        function onDeleteCourseExamClick(id) {
            $('#Id').val(id);
            $('#deleteConfirmationModal').modal('show');
        }
        function deleteCourseExam() { 
            var id = $('#Id').val();
                $.ajax({
                    url: "/CourseExam/DeleteConfirmed/" + id,
                    type: "POST",
                    success: function (response) {
                        $('#deleteConfirmationModal').modal('hide');
                        toastr.success('Course exam deleted successfully.');
                        dataTable.ajax.reload();
                    },
                    error: function (response) {
                        toastr.error('Error deleting course exam.');
                    }
                });
            
        }
        


        // Function to populate data in the modal for editing
        function onEditCourseExamClick(id) {
            $.ajax({
                url: "/CourseExam/Edit/" + id,
                type: "GET",
                success: function (data) {
                    $('#Id').val(data.id);
                    $('#CourseId').val(data.courseId);
                    $('#ExamTitle').val(data.examTitle);
                    $('#ExamType').val(data.examType);
                    $('#TotalMarks').val(data.totalMarks);
                    $('#PassingMarks').val(data.passingMarks);
                    $('#Remarks').val(data.remarks);

                    $('#addEditCourseExamModal').modal('show');
                    $('#addEditCourseExamModalLabel').text('Edit Course Exam');
                },
                error: function (response) {
                    toastr.error('Error fetching course exam data.');
                }
            });
        }


        // Function to open modal for adding a new CourseExam
        function onAddCourseExamClick() {
            $('#Id').val("");
            $('#CourseId').val("");
            $('#ExamTitle').val("");
            $('#ExamType').val("");
            $('#TotalMarks').val("");
            $('#PassingMarks').val("");
            $('#Remarks').val("");

            $('#addEditCourseExamModal').modal('show');
        }

        // DataTable initialization
        var dataTable = $('#CourseExamTable').DataTable({
            "processing": true,
            "serverSide": true,
            "filter": true,
            "orderMulti": false,
            "ajax": {
                "url": "/CourseExam/GetAll",
                "type": "POST",
                "datatype": "json",
                    "data": function (d) {
                // Custom parameters to send along with the request
                d.searchValue = d.search.value;
                d.sortColumn = d.columns[d.order[0].column].data;
                d.sortColumnDirection = d.order[0].dir;
            }
            },
            "columns": [
                { "data": "id", "name": "Id", "autoWidth": true },
                { "data": "courseId", "name": "CourseId", "autoWidth": true },
                { "data": "examTitle", "name": "ExamTitle", "autoWidth": true },
                { "data": "examType", "name": "ExamType", "autoWidth": true },
                { "data": "totalMarks", "name": "TotalMarks", "autoWidth": true },
                { "data": "passingMarks", "name": "PassingMarks", "autoWidth": true },
                { "data": "remarks", "name": "Remarks", "autoWidth": true },
                {
                    "data": "id",
                    "render": function (data, type, row) {
                        return `    
                                   <div class="text-center">
                                     <a href="#" onclick="onEditCourseExamClick(${data})" class="btn btn-primary btn-sm"><i class="fas fa-edit"></i></a> 
                                     <a href="#" onclick="onDeleteCourseExamClick(${ row.id})" class="btn btn-danger btn-sm"><i class="fas fa-trash-alt"></i></a> 
                                   </div>

                            `;
                            
                            
                    }, "autoWidth": true
                }
            ]
        });

          // Function to populate Course ID dropdown
            function populateCourseDropdown() {
                $.ajax({
                    url: "/Course/GetAllCourseIds",  // Replace with your API endpoint to fetch Course IDs
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        if (Array.isArray(data)) {
                            var options = '<option value="">Select Course ID</option>';
                            data.forEach(function (courseId) {
                                options += '<option value="' + courseId + '">' + courseId + '</option>';

                            });
                            $('#CourseId').html(options);
                        } else {
                            console.error('Invalid data format:', data);
                            toastr.error('Failed to fetch Course IDs. Please try again.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching Course IDs:', error);
                        toastr.error('Error fetching Course IDs. Please try again later.');
                    }
                });
            }

            // Call the function to populate Course ID dropdown
            populateCourseDropdown();
        // Handle modal close event to clear validation messages
            $('#addEditCourseExamModal').on('hidden.bs.modal', function () {
                clearValidationMessages();
            });
    </script>
}


